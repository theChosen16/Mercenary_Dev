"""fix_user_job_relationship

Revision ID: 0c45cddd0492
Revises: 7bbc3a820ec0
Create Date: 2025-07-21 00:00:02.758470

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0c45cddd0492'
down_revision = '7bbc3a820ec0'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First add the columns as nullable
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    
    # Set default values for all existing rows
    op.execute("UPDATE users SET created_at = NOW(), updated_at = NOW()")
    
    # Now alter the columns to be NOT NULL
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at', nullable=False)
        batch_op.alter_column('updated_at', nullable=False)
        
        # Proceed with the rest of the changes
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               nullable=False)
        batch_op.alter_column('role',
               existing_type=postgresql.ENUM('ADMIN', 'MERCENARY', 'OFFERER', name='userrole'),
               server_default=None,
               existing_nullable=False)
        
        # Drop constraints and columns that are no longer needed
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_constraint(batch_op.f('users_username_key'), type_='unique')
        batch_op.drop_column('username')
        batch_op.drop_column('bio')
        batch_op.drop_column('full_name')
        batch_op.drop_column('profile_picture')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('profile_picture', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('full_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint(batch_op.f('users_username_key'), ['username'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.alter_column('role',
               existing_type=postgresql.ENUM('ADMIN', 'MERCENARY', 'OFFERER', name='userrole'),
               server_default=sa.text("'MERCENARY'::userrole"),
               existing_nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('true'),
               nullable=True)
        batch_op.alter_column('hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###
