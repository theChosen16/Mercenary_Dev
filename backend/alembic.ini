# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = app/db/migrations

# template used to generate migration files
# file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version location specification; This defaults
# to app/db/migrations/versions.  When using multiple version
# directories, initial revisions must be specified with --version-path
# version_locations = %(here)s/app/db/migrations/versions

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

sqlalchemy.url = postgresql://postgres:postgres@localhost:5432/mercenary_dev


[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks=black
# black.type=console_scripts
# black.entrypoint=black
# black.options=-l 79 REVISION_SCRIPT_FILENAME

# lint with isort
# hooks=isort
# isort.type=console_scripts
# isort.entrypoint=isort
# isort.options=--profile black REVISION_SCRIPT_FILENAME

# Validate the revision file with flake8
# hooks=flake8
# flake8.type=console_scripts
# flake8.entrypoint=flake8
# flake8.options=--max-line-length=79 REVISION_SCRIPT_FILENAME

# Validate the revision file with mypy
# hooks=mypy
# mypy.type=console_scripts
# mypy.entrypoint=mypy
# mypy.options=--ignore-missing-imports --disallow-untyped-defs --strict-optional REVISION_SCRIPT_FILENAME

# Format using "black" and lint with flake8
# hooks=black,flake8
# black.type=console_scripts
# black.entrypoint=black
# black.options=-l 79 REVISION_SCRIPT_FILENAME
# flake8.type=console_scripts
# flake8.entrypoint=flake8
# flake8.options=--max-line-length=79 REVISION_SCRIPT_FILENAME

# Use more than one hook with different configurations
# hooks=black,black-79,isort,isort-profile-black
# black.type=console_scripts
# black.entrypoint=black
# black.options=-l 88 REVISION_SCRIPT_FILENAME
# black-79.type=console_scripts
# black-79.entrypoint=black
# black-79.options=-l 79 REVISION_SCRIPT_FILENAME
# isort.type=console_scripts
# isort.entrypoint=isort
# isort.options=--profile black REVISION_SCRIPT_FILENAME
# isort-profile-black.type=console_scripts
# isort-profile-black.entrypoint=isort
# isort-profile-black.options=--profile black REVISION_SCRIPT_FILENAME

# You can also define the path to the hooks in the project and use the
# file protocol (slashes must be escaped on Windows)
# hooks=black
# black.type=file
# black.location=./tools/format.py
# black.options=REVISION_SCRIPT_FILENAME

# You can also define the path to a Python module that defines a run()
# function that takes one or more arguments.
# hooks=black
# black.type=module
# black.location=alembic_black
# black.options=REVISION_SCRIPT_FILENAME


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
